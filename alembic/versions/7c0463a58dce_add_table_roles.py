"""Add table roles

Revision ID: 7c0463a58dce
Revises: e65353d6311a
Create Date: 2025-02-15 18:11:10.797391

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7c0463a58dce"
down_revision: Union[str, None] = "e65353d6311a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name")
    )
    op.create_table(
        "user_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ),
        sa.PrimaryKeyConstraint("id")
    )
    op.alter_column(
        "user_question",
        "user_id",
        existing_type=sa.INTEGER(),
        nullable=True
    )
    op.alter_column(
        "user_question",
        "question_id",
        existing_type=sa.INTEGER(),
        nullable=True
    )

    op.execute("INSERT INTO role (name) VALUES ('USER')")
    op.execute("INSERT INTO role (name) VALUES ('ADMIN')")

    conn = op.get_bind()
    user_ids = [row[0] for row in conn.execute(sa.text("SELECT id FROM public.user")).fetchall()]

    for user_id in user_ids:
        conn.execute(sa.text(
            "INSERT INTO user_role (user_id, role_id) VALUES "
            "(:user_id, (SELECT id FROM role WHERE name='USER'))"
        ), {"user_id": user_id})

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_question",
        "question_id",
        existing_type=sa.INTEGER(),
        nullable=False)
    op.alter_column(
        "user_question",
        "user_id",
        existing_type=sa.INTEGER(),
        nullable=False)
    op.drop_table("user_role")
    op.drop_table("role")
    # ### end Alembic commands ###
