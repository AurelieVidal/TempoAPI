"""connection table

Revision ID: f9ecd51d9188
Revises: 7c0463a58dce
Create Date: 2025-03-10 20:59:47.928463

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f9ecd51d9188"
down_revision: Union[str, None] = "7c0463a58dce"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    status_enum = sa.Enum(
        "SUCCESS",
        "FAILED",
        "SUSPICIOUS",
        "VALIDATED",
        "VALIDATION_FAILED",
        "ASK_FORGOTTEN_PASSWORD",
        "ALLOW_FORGOTTEN_PASSWORD",
        name="connection_status_enum",
        create_type=False
    )

    op.create_table(
        "connection",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("device", sa.String(), nullable=True),
        sa.Column("ip_address", sa.String(), nullable=True),
        sa.Column("output", sa.String(), nullable=True),
        sa.Column("status", status_enum, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ),
        sa.PrimaryKeyConstraint("id")
    )
    op.execute("ALTER TABLE role ALTER COLUMN name TYPE role_enum USING name::role_enum")
    op.execute("ALTER TYPE status_enum ADD VALUE 'BANNED'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE role ALTER COLUMN name TYPE VARCHAR USING name::VARCHAR")
    op.drop_table("connection")
    op.execute("DROP TYPE connection_status_enum")
    # ### end Alembic commands ###
